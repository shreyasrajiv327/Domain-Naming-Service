{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasr/Documents/domain-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\";\nimport contractABI from './utils/contractABI.json';\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// Add the domain you will be minting\nconst tld = '.ninja';\nconst CONTRACT_ADDRESS = \"0xde6Bea54d943Ba22B7bA58a5cb55a3a05e76a625\";\nconst App = () => {\n  _s();\n  const [currentAccount, setCurrentAccount] = useState('');\n  // Add some state data properties\n  const [domain, setDomain] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [record, setRecord] = useState('');\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  };\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) {\n      return;\n    }\n    // Alert the user if the domain is too short\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // Calculate price based on length of domain (change this to match your contract)\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n\n        // Check if the transaction was successfully completed\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // Set the record for the domain\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord('');\n          setDomain('');\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Render methods\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"Ninja donut gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n\n  // Form to enter domain name and data\n  const renderInputForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: mintDomain,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"m9f2kE1SOUpPNxLAd3BcaH/kUj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","contractABI","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","currentAccount","setCurrentAccount","domain","setDomain","loading","setLoading","record","setRecord","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderInputForm","type","placeholder","onChange","e","target","href","rel","_c","$RefreshReg$"],"sources":["/Users/shreyasr/Documents/domain-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\";\nimport contractABI from './utils/contractABI.json'\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// Add the domain you will be minting\nconst tld = '.ninja';\nconst CONTRACT_ADDRESS = \"0xde6Bea54d943Ba22B7bA58a5cb55a3a05e76a625\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState('');\n  // Add some state data properties\n  const [domain, setDomain] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [record, setRecord] = useState('');\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  };\n\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) { return }\n    // Alert the user if the domain is too short\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // Calculate price based on length of domain (change this to match your contract)\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n        console.log(\"Going to pop wallet now to pay gas...\")\n        let tx = await contract.register(domain, { value: ethers.utils.parseEther(price) });\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n\n        // Check if the transaction was successfully completed\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // Set the record for the domain\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          setRecord('');\n          setDomain('');\n        }\n        else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  // Render methods\n  const renderNotConnectedContainer = () => (\n    <div className=\"connect-wallet-container\">\n      <img src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\" alt=\"Ninja donut gif\" />\n      {/* Call the connectWallet function we just wrote when the button is clicked */}\n      <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n        Connect Wallet\n      </button>\n    </div>\n  );\n\n  // Form to enter domain name and data\n  const renderInputForm = () => {\n    return (\n      <div className=\"form-container\">\n        <div className=\"first-row\">\n          <input\n            type=\"text\"\n            value={domain}\n            placeholder='domain'\n            onChange={e => setDomain(e.target.value)}\n          />\n          <p className='tld'> {tld} </p>\n        </div>\n\n        <input\n          type=\"text\"\n          value={record}\n          placeholder='whats ur ninja power'\n          onChange={e => setRecord(e.target.value)}\n        />\n\n        <div className=\"button-container\">\n          {/* Call the mintDomain function when the button is clicked */}\n          <button className='cta-button mint-button' onClick={mintDomain}>\n            Mint\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n              <p className=\"title\">🐱‍👤 Ninja Name Service</p>\n              <p className=\"subtitle\">Your immortal API on the blockchain!</p>\n            </div>\n          </header>\n        </div>\n\n        {!currentAccount && renderNotConnectedContainer()}\n        {/* Render the input form if an account is connected */}\n        {currentAccount && renderInputForm()}\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}