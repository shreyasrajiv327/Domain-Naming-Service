{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasr/Documents/domain-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst App = () => {\n  _s();\n  // Gotta make sure this is async.\n  const checkIfWalletIsConnected = () => {\n    // First make sure we have access to window.ethereum\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n  };\n\n  // Create a function to render if wallet is not connected yet\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"Ninja gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  // This runs our function when the page loads.\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), renderNotConnectedContainer(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","twitterLogo","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","App","_s","checkIfWalletIsConnected","ethereum","window","console","log","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/shreyasr/Documents/domain-starter/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n\n  // Gotta make sure this is async.\n  const checkIfWalletIsConnected = () => {\n    // First make sure we have access to window.ethereum\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n  }\n\n  // Create a function to render if wallet is not connected yet\n  const renderNotConnectedContainer = () => (\n    <div className=\"connect-wallet-container\">\n      <img src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\" alt=\"Ninja gif\" />\n      <button className=\"cta-button connect-wallet-button\">\n        Connect Wallet\n      </button>\n    </div>\n    );\n\n  // This runs our function when the page loads.\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n            <p className=\"title\">üê±‚Äçüë§ Ninja Name Service</p>\n            <p className=\"subtitle\">Your immortal API on the blockchain!</p>\n            </div>\n          </header>\n        </div>\n\n        {/* Add your render method here */}\n        {renderNotConnectedContainer()}\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a className=\"footer-text\" \n            href={TWITTER_LINK} \n            target=\"_blank\"\n            rel=\"noreferrer\">\n              {`built with @${TWITTER_HANDLE}`}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}