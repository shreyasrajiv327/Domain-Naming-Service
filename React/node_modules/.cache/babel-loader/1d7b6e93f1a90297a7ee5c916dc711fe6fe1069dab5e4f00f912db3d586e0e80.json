{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasr/Documents/Domain-Naming-Service/React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport backgroundimg from './assets/backgroundimg.png';\nimport { ethers } from \"ethers\";\nimport contractABI from './utils/contractABI.json';\nimport githubLogo from './assets/githubLogo.png';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { networks } from './utils/networks.js';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GITHUB_HANDLE = 'shreyasrajiv327';\nconst GITHUB_LINK = `https://github.com/${GITHUB_HANDLE}`;\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tld = '.Syndicate';\nconst CONTRACT_ADDRESS = \"0x746f0bd4C040BDFC41EaB77ca370F87662f546e6\";\nconst App = () => {\n  _s();\n  const [network, setNetwork] = useState('');\n  const [editing, setEditing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [domain, setDomain] = useState('');\n  const [record, setRecord] = useState('');\n  const [mints, setMints] = useState([]);\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const switchNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        // Try to switch to the Mumbai testnet\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }] // Check networks.js for hexadecimal network ids\n        });\n      } catch (error) {\n        // This error code means that the chain we want has not been added to MetaMask\n        // In this case we ask the user to add it to their MetaMask\n        if (error.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                chainName: 'Polygon Mumbai Testnet',\n                rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n                nativeCurrency: {\n                  name: \"Mumbai Matic\",\n                  symbol: \"MATIC\",\n                  decimals: 18\n                },\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n              }]\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      // If window.ethereum is not found then MetaMask is not installed\n      alert('MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html');\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log('Make sure you have metamask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n\n    // This is the new part, we check the user's network chain ID\n    const chainId = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on('chainChanged', handleChainChanged);\n\n    // Reload the page when they change networks\n    function handleChainChanged(_chainId) {\n      window.location.reload();\n    }\n  };\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) {\n      return;\n    }\n    // Alert the user if the domain is too short\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // Calculate price based on length of domain (change this to match your contract)\t\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n\n        // Check if the transaction was successfully completed\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // Set the record for the domain\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // Call fetchMints after 2 seconds\n          setTimeout(() => {\n            fetchMints();\n          }, 2000);\n          setRecord('');\n          setDomain('');\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchMints = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        // You know all this\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n        // Get all the domain names from our contract\n        const names = await contract.getAllNames();\n\n        // For each name, get the record and the address\n        const mintRecords = await Promise.all(names.map(async name => {\n          const mintRecord = await contract.records(name);\n          const owner = await contract.domains(name);\n          return {\n            id: names.indexOf(name),\n            name: name,\n            record: mintRecord,\n            owner: owner\n          };\n        }));\n        console.log(\"MINTS FETCHED \", mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // This will run any time currentAccount or network are changed\n  useEffect(() => {\n    if (network === 'Polygon Mumbai Testnet') {\n      fetchMints();\n    }\n  }, [currentAccount, network]);\n  const updateDomain = async () => {\n    if (!record || !domain) {\n      return;\n    }\n    setLoading(true);\n    console.log(\"Updating domain\", domain, \"with record\", record);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        let tx = await contract.setRecord(domain, record);\n        await tx.wait();\n        console.log(\"Record set https://mumbai.polygonscan.com/tx/\" + tx.hash);\n        fetchMints();\n        setRecord('');\n        setDomain('');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Render methods\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/KK7yJR1ejwr1OFYAgm/giphy.gif\",\n      alt: \"gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 3\n  }, this);\n  const renderMints = () => {\n    if (currentAccount && mints.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mint-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \" Recently minted domains!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mint-list\",\n          children: mints.map((mint, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mint-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mint-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  href: `https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"underlined\",\n                    children: [' ', mint.name, tld, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 11\n                }, this), mint.owner.toLowerCase() === currentAccount.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => editRecord(mint.name),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"edit-icon\",\n                    src: \"https://img.icons8.com/metro/26/000000/pencil.png\",\n                    alt: \"Edit button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 12\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", mint.record, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 10\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  // This will take us into edit mode and show us the edit buttons!\n  const editRecord = name => {\n    console.log(\"Editing record for\", name);\n    setEditing(true);\n    setDomain(name);\n  };\n\n  // Form to enter domain name and data\n  const renderInputForm = () => {\n    if (network !== 'Polygon Mumbai Testnet') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please connect to Polygon Mumbai Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: switchNetwork,\n          children: \"Click here to switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"tell me about yourself\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: updateDomain,\n          children: \"Set record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: () => {\n            setEditing(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 6\n      }, this) :\n      /*#__PURE__*/\n      // If editing is not true, the mint button will be returned instead\n      _jsxDEV(\"button\", {\n        className: \"cta-button mint-button\",\n        disabled: loading,\n        onClick: mintDomain,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 4\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: \"Shreyas's Naming Service\\uD83E\\uDEE1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes(\"Polygon\") ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 8\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Not connected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 103\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), mints && renderMints(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Github Logo\",\n          className: \"github-logo\",\n          src: githubLogo,\n          style: {\n            width: '50px',\n            height: '50px',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: GITHUB_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `@${GITHUB_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"QyoNQtFWxY/WvJCA3ZtYlfdcXEA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","backgroundimg","ethers","contractABI","githubLogo","polygonLogo","ethLogo","networks","jsxDEV","_jsxDEV","GITHUB_HANDLE","GITHUB_LINK","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","network","setNetwork","editing","setEditing","loading","setLoading","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","mints","setMints","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","switchNetwork","params","chainId","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","checkIfWalletIsConnected","length","account","on","handleChainChanged","_chainId","location","reload","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","setTimeout","fetchMints","names","getAllNames","mintRecords","Promise","all","map","mintRecord","records","owner","domains","id","indexOf","updateDomain","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderMints","mint","index","href","target","rel","toLowerCase","editRecord","renderInputForm","type","placeholder","onChange","e","disabled","includes","slice","style","width","height","marginRight","_c","$RefreshReg$"],"sources":["/Users/shreyasr/Documents/Domain-Naming-Service/React/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport backgroundimg from './assets/backgroundimg.png'\nimport { ethers } from \"ethers\";\nimport contractABI from './utils/contractABI.json';\nimport githubLogo from './assets/githubLogo.png';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { networks } from './utils/networks.js';\n\n// Constants\nconst GITHUB_HANDLE = 'shreyasrajiv327';\nconst GITHUB_LINK = `https://github.com/${GITHUB_HANDLE}`;\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst tld = '.Syndicate';\nconst CONTRACT_ADDRESS = \"0x746f0bd4C040BDFC41EaB77ca370F87662f546e6\";\n\nconst App = () => {\n\tconst [network, setNetwork] = useState('');\n\tconst [editing, setEditing] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentAccount, setCurrentAccount] = useState('');\n\tconst [domain, setDomain] = useState('');\n\tconst [record, setRecord] = useState('');\n\tconst [mints, setMints] = useState([]);\n\n\tconst connectWallet = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (!ethereum) {\n\t\t\t\talert(\"Get MetaMask -> https://metamask.io/\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n\t\t\tconsole.log(\"Connected\", accounts[0]);\n\t\t\tsetCurrentAccount(accounts[0]);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tconst switchNetwork = async () => {\n\t\tif (window.ethereum) {\n\t\t\ttry {\n\t\t\t\t// Try to switch to the Mumbai testnet\n\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\tmethod: 'wallet_switchEthereumChain',\n\t\t\t\t\tparams: [{ chainId: '0x13881' }], // Check networks.js for hexadecimal network ids\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\t// This error code means that the chain we want has not been added to MetaMask\n\t\t\t\t// In this case we ask the user to add it to their MetaMask\n\t\t\t\tif (error.code === 4902) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\t\t\tmethod: 'wallet_addEthereumChain',\n\t\t\t\t\t\t\tparams: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tchainId: '0x13881',\n\t\t\t\t\t\t\t\t\tchainName: 'Polygon Mumbai Testnet',\n\t\t\t\t\t\t\t\t\trpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n\t\t\t\t\t\t\t\t\tnativeCurrency: {\n\t\t\t\t\t\t\t\t\t\tname: \"Mumbai Matic\",\n\t\t\t\t\t\t\t\t\t\tsymbol: \"MATIC\",\n\t\t\t\t\t\t\t\t\t\tdecimals: 18\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tblockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t} else {\n\t\t\t// If window.ethereum is not found then MetaMask is not installed\n\t\t\talert('MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html');\n\t\t}\n\t}\n\n\tconst checkIfWalletIsConnected = async () => {\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\tconsole.log('Make sure you have metamask!');\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log('We have the ethereum object', ethereum);\n\t\t}\n\n\t\tconst accounts = await ethereum.request({ method: 'eth_accounts' });\n\n\t\tif (accounts.length !== 0) {\n\t\t\tconst account = accounts[0];\n\t\t\tconsole.log('Found an authorized account:', account);\n\t\t\tsetCurrentAccount(account);\n\t\t} else {\n\t\t\tconsole.log('No authorized account found');\n\t\t}\n\n\t\t// This is the new part, we check the user's network chain ID\n\t\tconst chainId = await ethereum.request({ method: 'eth_chainId' });\n\t\tsetNetwork(networks[chainId]);\n\n\t\tethereum.on('chainChanged', handleChainChanged);\n\n\t\t// Reload the page when they change networks\n\t\tfunction handleChainChanged(_chainId) {\n\t\t\twindow.location.reload();\n\t\t}\n\t};\n\n\tconst mintDomain = async () => {\n\t\t// Don't run if the domain is empty\n\t\tif (!domain) { return }\n\t\t// Alert the user if the domain is too short\n\t\tif (domain.length < 3) {\n\t\t\talert('Domain must be at least 3 characters long');\n\t\t\treturn;\n\t\t}\n\t\t// Calculate price based on length of domain (change this to match your contract)\t\n\t\t// 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n\t\tconst price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n\t\tconsole.log(\"Minting domain\", domain, \"with price\", price);\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n\t\t\t\tconsole.log(\"Going to pop wallet now to pay gas...\")\n\t\t\t\tlet tx = await contract.register(domain, { value: ethers.utils.parseEther(price) });\n\t\t\t\t// Wait for the transaction to be mined\n\t\t\t\tconst receipt = await tx.wait();\n\n\t\t\t\t// Check if the transaction was successfully completed\n\t\t\t\tif (receipt.status === 1) {\n\t\t\t\t\tconsole.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n\t\t\t\t\t// Set the record for the domain\n\t\t\t\t\ttx = await contract.setRecord(domain, record);\n\t\t\t\t\tawait tx.wait();\n\n\t\t\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n\t\t\t\t\t// Call fetchMints after 2 seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tfetchMints();\n\t\t\t\t\t}, 2000);\n\n\t\t\t\t\tsetRecord('');\n\t\t\t\t\tsetDomain('');\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Transaction failed! Please try again\");\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tconst fetchMints = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\t\t\tif (ethereum) {\n\t\t\t\t// You know all this\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n\t\t\t\t// Get all the domain names from our contract\n\t\t\t\tconst names = await contract.getAllNames();\n\n\t\t\t\t// For each name, get the record and the address\n\t\t\t\tconst mintRecords = await Promise.all(names.map(async (name) => {\n\t\t\t\t\tconst mintRecord = await contract.records(name);\n\t\t\t\t\tconst owner = await contract.domains(name);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: names.indexOf(name),\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\trecord: mintRecord,\n\t\t\t\t\t\towner: owner,\n\t\t\t\t\t};\n\t\t\t\t}));\n\n\t\t\t\tconsole.log(\"MINTS FETCHED \", mintRecords);\n\t\t\t\tsetMints(mintRecords);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t// This will run any time currentAccount or network are changed\n\tuseEffect(() => {\n\t\tif (network === 'Polygon Mumbai Testnet') {\n\t\t\tfetchMints();\n\t\t}\n\t}, [currentAccount, network]);\n\n\n\tconst updateDomain = async () => {\n\t\tif (!record || !domain) { return }\n\t\tsetLoading(true);\n\t\tconsole.log(\"Updating domain\", domain, \"with record\", record);\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n\t\t\t\tlet tx = await contract.setRecord(domain, record);\n\t\t\t\tawait tx.wait();\n\t\t\t\tconsole.log(\"Record set https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n\t\t\t\tfetchMints();\n\t\t\t\tsetRecord('');\n\t\t\t\tsetDomain('');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\t// Render methods\n\tconst renderNotConnectedContainer = () => (\n\t\t<div className=\"connect-wallet-container\">\n\t\t\t<img src=\"https://media.giphy.com/media/KK7yJR1ejwr1OFYAgm/giphy.gif\" alt=\"gif\" />\n\t\t\t{/* Call the connectWallet function we just wrote when the button is clicked */}\n\t\t\t<button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n\t\t\t\tConnect Wallet\n\t\t\t</button>\n\t\t</div>\n\t);\n\n\tconst renderMints = () => {\n\t\tif (currentAccount && mints.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div className=\"mint-container\">\n\t\t\t\t\t<p className=\"subtitle\"> Recently minted domains!</p>\n\t\t\t\t\t<div className=\"mint-list\">\n\t\t\t\t\t\t{mints.map((mint, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"mint-item\" key={index}>\n\t\t\t\t\t\t\t\t\t<div className='mint-row'>\n\t\t\t\t\t\t\t\t\t\t<a className=\"link\" href={`https://testnets.opensea.io/assets/mumbai/${CONTRACT_ADDRESS}/${mint.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"underlined\">{' '}{mint.name}{tld}{' '}</p>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t{/* If mint.owner is currentAccount, add an \"edit\" button*/}\n\t\t\t\t\t\t\t\t\t\t{mint.owner.toLowerCase() === currentAccount.toLowerCase() ?\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"edit-button\" onClick={() => editRecord(mint.name)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"edit-icon\" src=\"https://img.icons8.com/metro/26/000000/pencil.png\" alt=\"Edit button\" />\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p> {mint.record} </p>\n\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>);\n\t\t}\n\t};\n\n\t// This will take us into edit mode and show us the edit buttons!\n\tconst editRecord = (name) => {\n\t\tconsole.log(\"Editing record for\", name);\n\t\tsetEditing(true);\n\t\tsetDomain(name);\n\t}\n\n\t// Form to enter domain name and data\n\tconst renderInputForm = () => {\n\t\tif (network !== 'Polygon Mumbai Testnet') {\n\t\t\treturn (\n\t\t\t\t<div className=\"connect-wallet-container\">\n\t\t\t\t\t<p>Please connect to Polygon Mumbai Testnet</p>\n\t\t\t\t\t<button className='cta-button mint-button' onClick={switchNetwork}>Click here to switch</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<div className=\"first-row\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={domain}\n\t\t\t\t\t\tplaceholder='domain'\n\t\t\t\t\t\tonChange={e => setDomain(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='tld'> {tld} </p>\n\t\t\t\t</div>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={record}\n\t\t\t\t\tplaceholder='tell me about yourself'\n\t\t\t\t\tonChange={e => setRecord(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/* If the editing variable is true, return the \"Set record\" and \"Cancel\" button */}\n\t\t\t\t{editing ? (\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t{/* This will call the updateDomain function we just made */}\n\t\t\t\t\t\t<button className='cta-button mint-button' disabled={loading} onClick={updateDomain}>\n\t\t\t\t\t\t\tSet record\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/* This will let us get out of editing mode by setting editing to false */}\n\t\t\t\t\t\t<button className='cta-button mint-button' onClick={() => { setEditing(false) }}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t// If editing is not true, the mint button will be returned instead\n\t\t\t\t\t<button className='cta-button mint-button' disabled={loading} onClick={mintDomain}>\n\t\t\t\t\t\tMint\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tuseEffect(() => {\n\t\tcheckIfWalletIsConnected();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<b><p className=\"title\">Shreyas's Naming Service🫡</p></b>\n\t\t\t\t\t\t\t<p className=\"subtitle\">Your immortal API on the blockchain!</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Display a logo and wallet connection status*/}\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<img alt=\"Network logo\" className=\"logo\" src={network.includes(\"Polygon\") ? polygonLogo : ethLogo} />\n\t\t\t\t\t\t\t{currentAccount ? <p> Wallet: {currentAccount.slice(0, 6)}...{currentAccount.slice(-4)} </p> : <p> Not connected </p>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\n\t\t\t\t{ !currentAccount && renderNotConnectedContainer() }\n\t\t\t\t{ currentAccount && renderInputForm() }\n\t\t\t\t{ mints && renderMints() }\n\n\t\t\t\t<div className=\"footer-container\">\n  <img alt=\"Github Logo\" className=\"github-logo\" src={githubLogo} style={{ width: '50px', height: '50px', marginRight: '10px' }} />\n  <a\n    className=\"footer-text\"\n    href={GITHUB_LINK}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >{`@${GITHUB_HANDLE}`}</a>\n</div>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\t\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}