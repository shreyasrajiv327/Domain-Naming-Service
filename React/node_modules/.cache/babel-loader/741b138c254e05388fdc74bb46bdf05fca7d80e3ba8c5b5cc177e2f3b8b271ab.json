{"ast":null,"code":"var _jsxFileName = \"/Users/shreyasr/Documents/Domain-Naming-Service/React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\";\nimport contractABI from './utils/contractABI.json';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { network } from './utils/networks';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// Add the domain you will be minting\nconst tld = '.ninja';\nconst CONTRACT_ADDRESS = \"0x99C5e3070C0300f2647E17A7D054D65DCa936f82\";\nconst App = () => {\n  _s();\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [network, setNetwork] = useState('');\n  // Add some state data properties\n  const [domain, setDomain] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [record, setRecord] = useState('');\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log('Make sure you have metamask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n    const chainId = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    setNetwork(networks[chainId]);\n    ethereum.on('chainChanged', handleChainChanged);\n\n    // Reload the page when they change networks\n    function handleChainChanged(_chainId) {\n      window.location.reload();\n    }\n  };\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) {\n      return;\n    }\n    // Alert the user if the domain is too short\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // Calculate price based on length of domain (change this to match your contract)\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log(\"Minting domain\", domain, \"with price\", price);\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let tx = await contract.register(domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n\n        // Check if the transaction was successfully completed\n        if (receipt.status === 1) {\n          console.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n\n          // Set the record for the domain\n          tx = await contract.setRecord(domain, record);\n          await tx.wait();\n          console.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n          setRecord('');\n          setDomain('');\n        } else {\n          alert(\"Transaction failed! Please try again\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Render methods\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"Ninja donut gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 4\n  }, this);\n  const switchNetwork = async () => {\n    if (window.ethereum) {\n      try {\n        // Try to switch to the Mumbai testnet\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }] // Check networks.js for hexadecimal network ids\n        });\n      } catch (error) {\n        // This error code means that the chain we want has not been added to MetaMask\n        // In this case we ask the user to add it to their MetaMask\n        if (error.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                chainName: 'Polygon Mumbai Testnet',\n                rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n                nativeCurrency: {\n                  name: \"Mumbai Matic\",\n                  symbol: \"MATIC\",\n                  decimals: 18\n                },\n                blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n              }]\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    } else {\n      // If window.ethereum is not found then MetaMask is not installed\n      alert('MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html');\n    }\n  };\n\n  // Form to enter domain name and data\n  const renderInputForm = () => {\n    if (network !== 'Polygon Mumbai Testnet') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please connect to the Polygon Mumbai Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: mintDomain,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 3\n    }, this);\n  };\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC64 Ninja Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Network logo\",\n              className: \"logo\",\n              src: network.includes(\"Polygon\") ? polygonLogo : ethLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 7\n            }, this), currentAccount ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Wallet: \", currentAccount.slice(0, 6), \"...\", currentAccount.slice(-4), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Not connected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 103\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 3\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 4\n  }, this);\n};\n_s(App, \"n2QjnuUN4Y9Wan8+c7/wahp7uNY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","ethers","contractABI","polygonLogo","ethLogo","network","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","_s","currentAccount","setCurrentAccount","setNetwork","domain","setDomain","loading","setLoading","record","setRecord","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","chainId","networks","on","handleChainChanged","_chainId","location","reload","mintDomain","price","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","tx","register","value","utils","parseEther","receipt","wait","status","hash","renderNotConnectedContainer","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","switchNetwork","params","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","renderInputForm","type","placeholder","onChange","e","target","includes","slice","href","rel","_c","$RefreshReg$"],"sources":["/Users/shreyasr/Documents/Domain-Naming-Service/React/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport {ethers} from \"ethers\";\nimport contractABI from './utils/contractABI.json';\nimport polygonLogo from './assets/polygonlogo.png';\nimport ethLogo from './assets/ethlogo.png';\nimport { network } from './utils/networks';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// Add the domain you will be minting\nconst tld = '.ninja';\nconst CONTRACT_ADDRESS = \"0x99C5e3070C0300f2647E17A7D054D65DCa936f82\";\n\nconst App = () => {\n\tconst [currentAccount, setCurrentAccount] = useState('');\n\tconst [network, setNetwork] = useState('');\n\t// Add some state data properties\n\tconst [domain, setDomain] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\tconst [record, setRecord] = useState('');\n  \n\tconst connectWallet = async () => {\n\t  try {\n\t\tconst { ethereum } = window;\n  \n\t\tif (!ethereum) {\n\t\t  alert(\"Get MetaMask -> https://metamask.io/\");\n\t\t  return;\n\t\t}\n  \n\t\tconst accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n  \n\t\tconsole.log(\"Connected\", accounts[0]);\n\t\tsetCurrentAccount(accounts[0]);\n\t  } catch (error) {\n\t\tconsole.log(error);\n\t  }\n\t}\n  \n\tconst checkIfWalletIsConnected = async () => {\n\t\tconst { ethereum } = window;\n\t\n\t\tif (!ethereum) {\n\t\t  console.log('Make sure you have metamask!');\n\t\t  return;\n\t\t} else {\n\t\t  console.log('We have the ethereum object', ethereum);\n\t\t}\n\t\t\n\t\tconst accounts = await ethereum.request({ method: 'eth_accounts' });\n\t\n\t\tif (accounts.length !== 0) {\n\t\t  const account = accounts[0];\n\t\t  console.log('Found an authorized account:', account);\n\t\t  setCurrentAccount(account);\n\t\t} else {\n\t\t  console.log('No authorized account found');\n\t\t}\n\t\tconst chainId = await ethereum.request({ method: 'eth_chainId' });\n    setNetwork(networks[chainId]);\n\n    ethereum.on('chainChanged', handleChainChanged);\n    \n    // Reload the page when they change networks\n    function handleChainChanged(_chainId) {\n      window.location.reload();\n    }\n  };\n  \n\tconst mintDomain = async () => {\n\t  // Don't run if the domain is empty\n\t  if (!domain) { return }\n\t  // Alert the user if the domain is too short\n\t  if (domain.length < 3) {\n\t\talert('Domain must be at least 3 characters long');\n\t\treturn;\n\t  }\n\t  // Calculate price based on length of domain (change this to match your contract)\n\t  // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n\t  const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n\t  console.log(\"Minting domain\", domain, \"with price\", price);\n\t  try {\n\t\tconst { ethereum } = window;\n\t\tif (ethereum) {\n\t\t  const provider = new ethers.providers.Web3Provider(ethereum);\n\t\t  const signer = provider.getSigner();\n\t\t  const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n  \n\t\t  console.log(\"Going to pop wallet now to pay gas...\")\n\t\t  let tx = await contract.register(domain, { value: ethers.utils.parseEther(price) });\n\t\t  // Wait for the transaction to be mined\n\t\t  const receipt = await tx.wait();\n  \n\t\t  // Check if the transaction was successfully completed\n\t\t  if (receipt.status === 1) {\n\t\t\tconsole.log(\"Domain minted! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n  \n\t\t\t// Set the record for the domain\n\t\t\ttx = await contract.setRecord(domain, record);\n\t\t\tawait tx.wait();\n  \n\t\t\tconsole.log(\"Record set! https://mumbai.polygonscan.com/tx/\" + tx.hash);\n  \n\t\t\tsetRecord('');\n\t\t\tsetDomain('');\n\t\t  }\n\t\t  else {\n\t\t\talert(\"Transaction failed! Please try again\");\n\t\t  }\n\t\t}\n\t  }\n\t  catch (error) {\n\t\tconsole.log(error);\n\t  }\n\t}\n  \n\t// Render methods\n\tconst renderNotConnectedContainer = () => (\n\t  <div className=\"connect-wallet-container\">\n\t\t<img src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\" alt=\"Ninja donut gif\" />\n\t\t{/* Call the connectWallet function we just wrote when the button is clicked */}\n\t\t<button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n\t\t  Connect Wallet\n\t\t</button>\n\t  </div>\n\t);\n\tconst switchNetwork = async () => {\n\t\tif (window.ethereum) {\n\t\t  try {\n\t\t\t// Try to switch to the Mumbai testnet\n\t\t\tawait window.ethereum.request({\n\t\t\t  method: 'wallet_switchEthereumChain',\n\t\t\t  params: [{ chainId: '0x13881' }], // Check networks.js for hexadecimal network ids\n\t\t\t});\n\t\t  } catch (error) {\n\t\t\t// This error code means that the chain we want has not been added to MetaMask\n\t\t\t// In this case we ask the user to add it to their MetaMask\n\t\t\tif (error.code === 4902) {\n\t\t\t  try {\n\t\t\t\tawait window.ethereum.request({\n\t\t\t\t  method: 'wallet_addEthereumChain',\n\t\t\t\t  params: [\n\t\t\t\t\t{\t\n\t\t\t\t\t  chainId: '0x13881',\n\t\t\t\t\t  chainName: 'Polygon Mumbai Testnet',\n\t\t\t\t\t  rpcUrls: ['https://rpc-mumbai.maticvigil.com/'],\n\t\t\t\t\t  nativeCurrency: {\n\t\t\t\t\t\t  name: \"Mumbai Matic\",\n\t\t\t\t\t\t  symbol: \"MATIC\",\n\t\t\t\t\t\t  decimals: 18\n\t\t\t\t\t  },\n\t\t\t\t\t  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\n\t\t\t\t\t},\n\t\t\t\t  ],\n\t\t\t\t});\n\t\t\t  } catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t  }\n\t\t\t}\n\t\t\tconsole.log(error);\n\t\t  }\n\t\t} else {\n\t\t  // If window.ethereum is not found then MetaMask is not installed\n\t\t  alert('MetaMask is not installed. Please install it to use this app: https://metamask.io/download.html');\n\t\t} \n\t  }\n  \n\t// Form to enter domain name and data\n\tconst renderInputForm = () => {\n\t\tif (network !== 'Polygon Mumbai Testnet') {\n\t\t\treturn (\n\t\t\t  <div className=\"connect-wallet-container\">\n\t\t\t\t<p>Please connect to the Polygon Mumbai Testnet</p>\n\t\t\t  </div>\n\t\t\t);\n\t\t  }\n\t  return (\n\t\t<div className=\"form-container\">\n\t\t  <div className=\"first-row\">\n\t\t\t<input\n\t\t\t  type=\"text\"\n\t\t\t  value={domain}\n\t\t\t  placeholder='domain'\n\t\t\t  onChange={e => setDomain(e.target.value)}\n\t\t\t/>\n\t\t\t<p className='tld'> {tld} </p>\n\t\t  </div>\n  \n\t\t  <input\n\t\t\ttype=\"text\"\n\t\t\tvalue={record}\n\t\t\tplaceholder='whats ur ninja power'\n\t\t\tonChange={e => setRecord(e.target.value)}\n\t\t  />\n  \n\t\t  <div className=\"button-container\">\n\t\t\t{/* Call the mintDomain function when the button is clicked */}\n\t\t\t<button className='cta-button mint-button' onClick={mintDomain}>\n\t\t\t  Mint\n\t\t\t</button>\n\t\t  </div>\n  \n\t\t</div>\n\t  );\n\t}\n  \n\tuseEffect(() => {\n\t  checkIfWalletIsConnected();\n\t}, []);\n  \n\treturn (\n\t  <div className=\"App\">\n\t\t<div className=\"container\">\n\t\t<div className=\"header-container\">\n  <header>\n    <div className=\"left\">\n      <p className=\"title\">🐱‍👤 Ninja Name Service</p>\n      <p className=\"subtitle\">Your immortal API on the blockchain!</p>\n    </div>\n    {/* Display a logo and wallet connection status*/}\n    <div className=\"right\">\n      <img alt=\"Network logo\" className=\"logo\" src={ network.includes(\"Polygon\") ? polygonLogo : ethLogo} />\n      { currentAccount ? <p> Wallet: {currentAccount.slice(0, 6)}...{currentAccount.slice(-4)} </p> : <p> Not connected </p> }\n    </div>\n  </header>\n</div>\n  \n\t\t  {!currentAccount && renderNotConnectedContainer()}\n\t\t  {/* Render the input form if an account is connected */}\n\t\t  {currentAccount && renderInputForm()}\n  \n\t\t  <div className=\"footer-container\">\n\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t<a\n\t\t\t  className=\"footer-text\"\n\t\t\t  href={TWITTER_LINK}\n\t\t\t  target=\"_blank\"\n\t\t\t  rel=\"noreferrer\"\n\t\t\t>{`built with @${TWITTER_HANDLE}`}</a>\n\t\t  </div>\n\t\t</div>\n\t  </div>\n\t);\n  };\n  \n  export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}